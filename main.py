import os

from preprocess.data_prepare import prepar_data, separte_train_test
from preprocess.data_preprocess import clean_fine_grain

def main(start_stage=4, end_stage=4):
    """

        - train
        - test
        - id_path_train.csv
        - id_path_test.csv
        - id_lab_trans.csv        <- id, lab, transcription
            - generated by reader.readtext(img_p) in data_prepare()
        - id_lab_trans_train.csv  <- id, lab, transcription (train)
        - id_lab_trans_test.csv   <- id, lab, transcription (test)

    :return:
    """
    # Stage 1: clean non-sceneText data
    dir_f = '/home/Data/image_data/Presidential'
    new_dir = "/home/Data/image_data/Presidential_clean"
    if start_stage <= 1 and end_stage >= 1:
        clean_fine_grain(dir_f, new_dir)

    # Stage 2: Recognize/transcript scene-text image into id_trans.csv (id_path.csv if needed)
    fine_grain_dir = "/home/Data/image_data/Presidential_clean"
    label2num = {'Biden': 0,
                 'Clinton': 1,
                 'Obama': 2,
                 'Romney': 3,
                 'Trump': 4}
    if start_stage <= 2 and end_stage >= 2:
        prepar_data(fine_grain_dir, label2num)

    # Stage 3: separate id_trans.csv, id_path.csv into train/text
    id_lab_trans = "/home/Data/image_data/id_lab_trans.csv"
    id_path = "/home/Data/image_data/id_path.csv"
    img_dir_traintest = "/home/Data/image_data/Presidential_clean_traintest"  # includes train/text
    if start_stage <= 3 and end_stage >= 3:
        separte_train_test(id_lab_trans, id_path, img_dir_traintest)
    # start train/evaluation -> in protest-detection-violence-estimation project

    # Stage 4: Train
    command = "python train.py --data_dir {} --batch_size 32 --lr 0.002 --print_freq 100 --epochs 100 --cuda".format(img_dir_traintest)
    if start_stage <= 4 and end_stage >= 4:
        os.system(command)


if __name__ == '__main__':
    main(4, 4)